


ARM Macro Assembler    Page 1 


    1 00000000                 AREA             myData, DATA, READWRITE
    2 00000000         ;global variable in assembly   
    3 00000000 00000000 
                       OrigStackPointer
                               DCD              0x00
    4 00000004         
    5 00000004                 AREA             myProg, CODE, READONLY
    6 00000000         ;export assembly functions   
    7 00000000                 EXPORT           process_terminated
    8 00000000                 EXPORT           process_begin
    9 00000000                 EXPORT           PIT0_IRQHandler
   10 00000000                 EXPORT           SVC_Handler
   11 00000000         ;import C functions
   12 00000000                 IMPORT           process_select
   13 00000000         
   14 00000000                 PRESERVE8
   15 00000000         
   16 00000000         
   17 00000000 4003710C 
                       TFLG    EQU              0x4003710C  ; TFLG address
   18 00000000 40037108 
                       CTRL    EQU              0x40037108  ; Ctrl address
   19 00000000 E000ED20 
                       SHCSR   EQU              0xE000ED20
   20 00000000         
   21 00000000         SVC_Handler
   22 00000000 9906            LDR              R1, [SP,#24] ; Read PC of SVC i
                                                            nstruction
   23 00000002 F811 0C02       LDRB             R0, [R1,#-2] ; Get #N from SVC 
                                                            instruction
   24 00000006 A101            ADR              R1, SVC_Table
   25 00000008 F851 F020       LDR              PC, [R1,R0,LSL #2] ; Branch to 
                                                            Nth SVC routine
   26 0000000C         
   27 0000000C         SVC_Table
   28 0000000C 00000000        DCD              SVC0_begin
   29 00000010 00000000        DCD              SVC1_terminate
   30 00000014 00000000        DCD              PIT0_IRQHandler ; Use system ti
                                                            ck as SVC2 handler
   31 00000018         
   32 00000018         SVC0_begin
   33 00000018 E92D 4FF0       PUSH             {R4-R11,LR}
   34 0000001C         ;******* Store Original Stack Pointer ********
   35 0000001C 4914            LDR              R1, =OrigStackPointer
   36 0000001E F8C1 D000       STR              SP, [R1]
   37 00000022         ;********************************************
   38 00000022         SVC1_terminate
   39 00000022         
   40 00000022 2000            MOVS             R0, #0
   41 00000024 E011            B                do_process_select
   42 00000026         
   43 00000026         process_terminated
   44 00000026 B662            CPSIE            i           ; Enable global int
                                                            errupts, just in ca
                                                            se   
   45 00000028 DF01            SVC              #1          ; SVC1 = process te
                                                            rminated
   46 0000002A         ; This SVC shouldn't ever return, as it would mean the p
                       rocess was scheduled again



ARM Macro Assembler    Page 2 


   47 0000002A         
   48 0000002A         process_begin
   49 0000002A B662            CPSIE            i           ; Enable global int
                                                            errupts (for SVC)
   50 0000002C DF00            SVC              #0          ; Syscall into sche
                                                            duler
   51 0000002E 4770            BX               LR
   52 00000030         
   53 00000030         
   54 00000030         process_blocked
   55 00000030 B662            CPSIE            i           ; Enable global int
                                                            errupts, just in ca
                                                            se   
   56 00000032 DF02            SVC              #2          ; SVC2 = process bl
                                                            ocked        
   57 00000034 4770            BX               LR
   58 00000036         
   59 00000036         PIT0_IRQHandler                      ; Timer Interrupt
   60 00000036 B672            CPSID            i           ; Disable all inter
                                                            rupts 
   61 00000038 E92D 4FF0       PUSH             {R4-R11,LR} ; save registers
   62 0000003C         ;----store scheduling timer state----
   63 0000003C 490D            LDR              R1, =CTRL
   64 0000003E 6808            LDR              R0, [R1]
   65 00000040 B401            PUSH             {R0}
   66 00000042         
   67 00000042         ;---clear the interrupt flag----
   68 00000042 4C0D            LDR              R4, =TFLG
   69 00000044 2101            MOVS             R1, #1
   70 00000046 6021            STR              R1, [R4]
   71 00000048         ;-------------------------------
   72 00000048         
   73 00000048         ;move sp to r0 to prepare for process_select 
   74 00000048 4668            MOV              R0, SP
   75 0000004A         
   76 0000004A         do_process_select
   77 0000004A         ;******* Load Original Stack Pointer ********
   78 0000004A         ; We want the process select function to run on the "mai
                       n" stack
   79 0000004A         ; This helps reduce funkiness when a process stack is to
                       o small and process_select overwrites other memory
   80 0000004A 4909            LDR              R1, =OrigStackPointer
   81 0000004C F8D1 D000       LDR              SP, [R1]
   82 00000050         ;********************************************
   83 00000050 F7FF FFFE       BL               process_select ;Process_select 
                                                            returns 0 if there 
                                                            are no processes le
                                                            ft
   84 00000054 2800            CMP              R0, #0
   85 00000056 D104            BNE              resume_process ;take branch if 
                                                            there are more proc
                                                            esses
   86 00000058         
   87 00000058         ; Disable scheduling timer before returning to initial c
                       aller
   88 00000058 4906            LDR              R1, =CTRL
   89 0000005A 2000            MOVS             R0, #0
   90 0000005C 6008            STR              R0, [R1]
   91 0000005E         



ARM Macro Assembler    Page 3 


   92 0000005E E8BD 8FF0       POP              {R4-R11,PC} ; Restore calle-sav
                                                            e state and return
   93 00000062         
   94 00000062         resume_process
   95 00000062 4685            MOV              SP, R0      ;switch stacks
   96 00000064         ;---- restore scheduling timer state
   97 00000064 BC01            POP              {R0}
   98 00000066 4903            LDR              R1, =CTRL
   99 00000068 6008            STR              R0, [R1]
  100 0000006A         
  101 0000006A B662            CPSIE            I           ; Enable global int
                                                            errupts before retu
                                                            rning from handler
  102 0000006C E8BD 8FF0       POP              {R4-R11,PC} ; Restore registers
                                                             that aren't saved 
                                                            by interrupt, and r
                                                            eturn from interrup
                                                            t
  103 00000070                 END
              00000000 
              40037108 
              4003710C 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4 --apcs=interw
ork --depend=.\objects\3140.d -o.\objects\3140.o -IC:\Users\meghan\Desktop\3140
\lab3\ece3140_lab3\RTE\Device\MK64FN1M0VLL12 -IC:\Users\meghan\Desktop\3140\lab
3\ece3140_lab3\RTE\_Target_1 -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.0\CMSIS\Includ
e -IC:\Keil_v5\ARM\PACK\Keil\Kinetis_SDK_DFP\2.2.0\platform\devices --predefine
="__EVAL SETA 1" --predefine="__UVISION_VERSION SETA 522" --predefine="_RTE_ SE
TA 1" --predefine="CPU_MK64FN1M0VLL12 SETA 1" --list=.\listings\3140.lst 3140.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

OrigStackPointer 00000000

Symbol: OrigStackPointer
   Definitions
      At line 3 in file 3140.s
   Uses
      At line 35 in file 3140.s
      At line 80 in file 3140.s

myData 00000000

Symbol: myData
   Definitions
      At line 1 in file 3140.s
   Uses
      None
Comment: myData unused
2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

PIT0_IRQHandler 00000036

Symbol: PIT0_IRQHandler
   Definitions
      At line 59 in file 3140.s
   Uses
      At line 9 in file 3140.s
      At line 30 in file 3140.s

SVC0_begin 00000018

Symbol: SVC0_begin
   Definitions
      At line 32 in file 3140.s
   Uses
      At line 28 in file 3140.s
Comment: SVC0_begin used once
SVC1_terminate 00000022

Symbol: SVC1_terminate
   Definitions
      At line 38 in file 3140.s
   Uses
      At line 29 in file 3140.s
Comment: SVC1_terminate used once
SVC_Handler 00000000

Symbol: SVC_Handler
   Definitions
      At line 21 in file 3140.s
   Uses
      At line 10 in file 3140.s
Comment: SVC_Handler used once
SVC_Table 0000000C

Symbol: SVC_Table
   Definitions
      At line 27 in file 3140.s
   Uses
      At line 24 in file 3140.s
Comment: SVC_Table used once
do_process_select 0000004A

Symbol: do_process_select
   Definitions
      At line 76 in file 3140.s
   Uses
      At line 41 in file 3140.s
Comment: do_process_select used once
myProg 00000000

Symbol: myProg
   Definitions
      At line 5 in file 3140.s
   Uses
      None
Comment: myProg unused
process_begin 0000002A




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

Symbol: process_begin
   Definitions
      At line 48 in file 3140.s
   Uses
      At line 8 in file 3140.s
Comment: process_begin used once
process_blocked 00000030

Symbol: process_blocked
   Definitions
      At line 54 in file 3140.s
   Uses
      None
Comment: process_blocked unused
process_terminated 00000026

Symbol: process_terminated
   Definitions
      At line 43 in file 3140.s
   Uses
      At line 7 in file 3140.s
Comment: process_terminated used once
resume_process 00000062

Symbol: resume_process
   Definitions
      At line 94 in file 3140.s
   Uses
      At line 85 in file 3140.s
Comment: resume_process used once
11 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

CTRL 40037108

Symbol: CTRL
   Definitions
      At line 18 in file 3140.s
   Uses
      At line 63 in file 3140.s
      At line 88 in file 3140.s
      At line 98 in file 3140.s

SHCSR E000ED20

Symbol: SHCSR
   Definitions
      At line 19 in file 3140.s
   Uses
      None
Comment: SHCSR unused
TFLG 4003710C

Symbol: TFLG
   Definitions
      At line 17 in file 3140.s
   Uses
      At line 68 in file 3140.s
Comment: TFLG used once
3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

process_select 00000000

Symbol: process_select
   Definitions
      At line 12 in file 3140.s
   Uses
      At line 83 in file 3140.s
Comment: process_select used once
1 symbol
353 symbols in table
